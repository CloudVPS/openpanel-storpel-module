#!/bin/bash
. /var/openpanel/api/sh/module.sh

Storpel.create() {
  model=$(coreval Storpel model)
  id=$(coreval Storpel id)
  echo "Model $model" > "${id}.storpel"
  echo "Hostname $id" >>"${id}.storpel"
  listaliases | while read a; do
    echo "Alias $a" >> "${id}.storpel"
  done
  coreval --loop Storpel StorpelUser | while read userid; do
    password=$(coreval Storpel StorpelUser "$userid" password)
    echo "User ${userid}:${password}" >> "${id}.storpel"
  done
  authd installfile "${id}.storpel" /etc/storpels
}

Storpel.update() {
  Storpel.create
}

Storpel.delete() {
  id=$(coreval OpenCORE:Session objectid)
  try_authd deletefile "/etc/storpels/${id}.storpel"
  rm -f "${id}.storpel"
}

StorpelService.create() {
  listenport=$(coreval StorpelService listenport)
  servername=$(coreval StorpelService servername)
  cat > storpeld.conf << _EOF_
[system]
ListenPort = $listenport
ServerName = $servername
_EOF_
  authd installfile storpeld.conf /etc
  authd reloadservice storpeld
}

StorpelService.update() {
  StorpelService.create
}

StorpelService.delete() {
  exiterror "Delete not implemented"
}

StorpelUser.create() {
  Storpel.update
}

StorpelUser.update() {
  Storpel.update
}

StorpelUser.delete() {
  Storpel.update
}

Module.getconfig() {
  listenport=$(cat /etc/storpeld.conf | grep ListenPort | sed -e "s/.* = //")
  servername=$(cat /etc/storpeld.conf | grep ServerName | sed -e "s/.* = //")
  cat << _EOF_
  <openpanel.module>
    <dict id="StorpelService" type="class">
      <dict id="storpeld">
	    <integer id="listenport">$listenport</integer>
        <string id="servername">$servername</string>
      </dict>
    </dict>
  </openpanel.module>
_EOF_
  exit 0
}

implement Storpel.module